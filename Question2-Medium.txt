Rotate an array of n elements to the right by k steps.
For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4]. 

How many different ways do you know to solve this
problem?

Solution:

#include <stdio.h>
void rightRotateByOne(int arr[], int n)
{
	int last = arr[n - 1];
	for (int i = n - 2; i >= 0; i--)
		arr[i + 1] = arr[i];

	arr[0] = last;
}
void rightRotate(int arr[], int k, int n)
{
	for (int i = 0; i < k; i++)
		rightRotateByOne(arr, n);
}

int main()
{
	int n,k;
	scanf("%d\n%d",&n,&k);
	int arr[n];
	{
		for(int i=0;i<n;i++)
		{
			scanf("%d ",&arr[i]);
		}
	}
	rightRotate(arr, k, n);

	for (int i = 0; i < n; i++)
		printf("%d ", arr[i]);

	return 0;
}




Input:
	n=7
	k=3
	arr=1 2 3 4 5 6 7

Output:
	5 6 7 1 2 3 4